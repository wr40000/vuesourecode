{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["let oldArrayproto = Array.prototype;\r\n\r\nexport let newArrayproto = Object.create(oldArrayproto);\r\n\r\nlet methods = [\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"pop\",\r\n    \"push\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\"\r\n]// concat slice不会改变原数组\r\n\r\nmethods.forEach((method) => {\r\n    newArrayproto[method] = function(...args){  // 重写数组的方法\r\n        const result = oldArrayproto[method].call(this,...args);   // 内部调用原来的方法，函数劫持 切片编程\r\n        console.log(method);\r\n\r\n        // 对对新增的数据再次观测\r\n        let inserted;\r\n        let ob = this.__ob__;  //外部data调用方法，所以this就指向data\r\n        switch(method){\r\n            case 'push':\r\n            case \"unshift\":     //vm.arr.unshift({a: 100})\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":      //vm.arr.splice(0, 1, 55,56,57)\r\n                inserted = args.slice(2);\r\n                break;\r\n        }\r\n        console.log(inserted);\r\n        if(inserted){\r\n            ob.observeArray(inserted)\r\n        }\r\n        return result;\r\n    }\r\n})\r\n\r\n","import {newArrayproto} from './array'\r\n\r\nclass Observe{\r\n    constructor(data){\r\n        // Object.defineProperty智能劫持已经存在的属性，vue2的$set就是为后加的属性添加响应式\r\n\r\n        // data.__ob__ = this //给data加上walk observeArray方法，array.js要使用以给新数据加上数据监测\r\n        // data.__proto__ = newArrayproto;会发生死循环，__ob__会被当做walk的key,defineReactive\r\n        // 中调用observe，再次return new Observe(data)，又加上data.__proto__ = newArrayproto;\r\n        // 再次执行walk,陷入死循环，所以修改该属性为不可枚举即可解决\r\n        Object.defineProperties(data,{\r\n            ['__ob__']: \r\n            {\r\n                value: this,\r\n                enumerable: false\r\n            }\r\n        })\r\n\r\n        // 不能给数组中的每个基本数据类型加上响应式，但是引用数据类型要加上响应式\r\n        if(Array.isArray(data)){\r\n            data.__proto__ = newArrayproto\r\n            // 这里我们要重新重写数组的7个方法，但同时保留其他的方法\r\n            this.observeArray(data)\r\n        } else{\r\n            this.walk(data) \r\n        }              \r\n    }\r\n    walk(data){\r\n        // 重新定义属性  性能不太行\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data){\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    observe(value);\r\n    Object.defineProperties(target, {\r\n        [key]: {\r\n            get() {\r\n                //修改数组元素为基本数据类型时之所以会有这个log，应该是外层的数据的get,\r\n                //不会出现打印console.log(\"用户取值了\", value); 的value为数组元素为基本数据类型的情况\r\n                console.log(\"用户取值了\", value); \r\n                return value;\r\n            },\r\n            set(newValue) {\r\n                console.log(\"用户更改值了\");\r\n                if (value === newValue) return;\r\n                observe(newValue);  // 每一个新值也同样需要进行数据代理\r\n                value = newValue;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function observe(data){    \r\n    if(typeof data !== 'object' || data == null){\r\n        return;     // 只对对象数据劫持\r\n    }\r\n    if(data.__ob__ instanceof Observe) {    // 说明数据已经被劫持过，直接返回\r\n        return data.__ob__\r\n    }\r\n\r\n    // 被劫持过则不需要在劫持(判断是否被劫持,可以增添一个实例，用实例来判断是否被劫持过)\r\n    return new Observe(data)\r\n}","import { observe } from \"./observe/index\";\r\n\r\nexport default function initState(vm){\r\n    const opts = vm.$options;\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n}\r\n// vm._data 用vm 代理 使得读取vm._data.name可以简化为vm.name\r\nfunction proxy(vm, target, key){\r\n    Object.defineProperties(vm,{\r\n        [key]:\r\n        {\r\n            get(){\r\n                return vm[target][key]\r\n            },\r\n            set(newvalue){                \r\n                if(vm[target][key] === newvalue) return\r\n                vm[target][key] = newvalue\r\n            }\r\n        }\r\n    })\r\n}\r\nfunction initData(vm){\r\n    let data = vm.$options.data\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    vm._data = data;\r\n    // console.log(vm._data === data); // true\r\n    // 数据劫持\r\n    observe(data)   //Object.defineProperties重新递归定义递归\r\n\r\n    // vm._data 用vm 代理 使得读取vm._data.name可以简化为vm.name\r\n    for(let key in data){\r\n        proxy(vm, \"_data\", key)\r\n    }\r\n}","import initState from \"./state\";\r\n\r\nexport function initMixin(Vue){\r\n    Vue.prototype._init = function(options){\r\n        const vm = this;\r\n        vm.$options = options;    // 用户数据挂载到实例上\r\n\r\n        // 初始状态\r\n        initState(vm);\r\n    }\r\n}\r\n\r\n","import {initMixin} from './init'\r\n\r\nfunction Vue(options){\r\n    this._init(options)\r\n};\r\n\r\ninitMixin(Vue)\r\n\r\n\r\n\r\nexport default Vue;"],"names":["oldArrayproto","Array","prototype","newArrayproto","Object","create","methods","forEach","method","_oldArrayproto$method","_len","arguments","length","args","_key","result","call","apply","concat","console","log","inserted","ob","__ob__","slice","observeArray","Observe","data","_classCallCheck","defineProperties","_defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","newvalue","_data","initMixin","Vue","_init","options"],"mappings":"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"}